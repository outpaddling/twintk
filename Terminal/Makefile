############################################################################
# Installed targets

LIB     = libterminal.a

############################################################################
# List object files that comprise BIN.

OBJS =  addseq.o \
	del_term.o \
	getseq.o \
	init_keymap.o \
	init_names.o \
	init_term.o \
	load_tinfo.o \
	raw_print.o \
	tadd_kmous.o \
	taddc.o \
	taddseq.o \
	tcbreak_mode.o \
	tchange_sreg.o \
	tclear_eol.o \
	tclear_eos.o \
	tclr_screen.o \
	tdelete_ch.o \
	tdelete_line.o \
	tdump.o \
	tget_resp.o \
	tgetc.o \
	tgetevent.o \
	tgetmouse.o \
	tgets.o \
	tgetseq.o \
	thome.o \
	tinsert_ch.o \
	tinsert_line.o \
	tinsert_mode.o \
	tmousesrvr.o \
	tmove_down.o \
	tmove_left.o \
	tmove_right.o \
	tmove_to.o \
	tmove_up.o \
	tparm.o \
	tpop_tty.o \
	tprintf.o \
	tpush_event.o \
	tpush_tty.o \
	tputc.o \
	tputs.o \
	traw_mode.o \
	tredraw.o \
	tredraw_line.o \
	tscroll_for.o \
	tscroll_rev.o \
	tset_bg.o \
	tset_dim.o \
	tset_fg.o \
	tset_modes.o \
	tset_start.o \
	tset_tty.o \
	tunset_tty.o

############################################################################
# Compile, link, and install options

# Install in /usr/local, unless defined by the parent Makefile, the
# environment, or a command line option such as PREFIX=/opt/local.
PREFIX      ?= /usr/local
MANPREFIX   ?= ${PREFIX}

# Where to find local libraries and headers.  For MacPorts, override
# with "make LOCALBASE=/opt/local"
LOCALBASE   ?= ${PREFIX}

############################################################################
# Build flags
# Override with "make CC=gcc", "make CC=icc", etc.
# Do not add non-portable options (such as -Wall) using +=

# Portable defaults.  Can be overridden by mk.conf or command line.
CC          ?= gcc
CFLAGS      ?= -Wall -g

CXX         ?= g++
CXXFLAGS    ?= -Wall -g

CPP         ?= cpp

AR          ?= ar
RANLIB      ?= ranlib

INCLUDES    += -I. -I../Image -I../Mouse -I${LOCALBASE}/include
# load_tinfo() needs prefix to find terminfo database
CFLAGS      += ${INCLUDES} -DPREFIX="\"${PREFIX}\""

############################################################################
# Assume first command in PATH.  Override with full pathnames if necessary.
# E.g. "make INSTALL=/usr/local/bin/ginstall"
# Do not place flags here (e.g. RM = rm -f).  Just provide the command
# and let each usage dictate the flags.

MKDIR   ?= mkdir
INSTALL ?= install
LN      ?= ln
RM      ?= rm
PRINTF  ?= printf

############################################################################
# Archive rules

all:    ${LIB}

${LIB}: ${OBJS}
	${AR} r ${LIB} ${OBJS}
	${RANLIB} ${LIB}

############################################################################
# Include dependencies generated by "make depend", if they exist.
# These rules explicitly list dependencies for each object file.
# See "depend" target below.  If Makefile.depend does not exist, use
# generic source compile rules.  These have some limitations, so you
# may prefer to create explicit rules for each target file.  This can
# be done automatically using "cpp -M" or "cpp -MM".  Run "man cpp"
# for more information, or see the "depend" target below.

# Rules generated by "make depend"
include Makefile.depend

############################################################################
# Self-generate dependencies the old-fashioned way

depend:
	rm -f Makefile.depend
	for file in *.c; do \
	    ${CPP} ${INCLUDES} -MM $${file} >> Makefile.depend; \
	    ${PRINTF} "\t\$${CC} -c \$${CFLAGS} $${file}\n\n" >> Makefile.depend; \
	done

############################################################################
# Remove generated files (objs and nroff output from man pages)

clean:
	rm -f ${OBJS} ${LIB} *.nr

# Keep backup files during normal clean, but provide an option to remove them
realclean: clean
	rm -f .*.bak *.bak *.BAK *.gmon core *.core


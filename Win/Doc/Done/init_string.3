.TH TWIN 3
.SH NAME
.PP
TWIN - Terminal Windows Library
.SH SYNOPSIS
.PP
.nf
#include <windows.h>

void    init_string(field, line, col, len, str_type, prompt,
                    help, string_ptr)
field_t *field;
unsigned line, col, len;
str_t   str_type;
char   *prompt, *help, *string_ptr;

.fi
.SH DESCRIPTION

.B init_string()
initializes a field for the
.B screen_input()
function. 

.cu
Parameters:

.cu
field
is the address of one element in an array of
.B field_t
records.  ( See
.B screen_input()
for more information about the
field_t structure )

.cu
line
and
.cu
col
give the coordinates within the window where the input prompt will
be displayed.  The data will be input to the immediate right of
the input prompt, at coordinates [line,col+strlen(prompt)].  You can adjust
the input location by padding the prompt with trailing spaces.

.cu
len
is the maximum length of the string to be input, i.e. the size
of the array
.cu
string_ptr.
If the string entered is longer than len, it will be truncated
to fit the array.
This is primarily a safety measure to remind you to use a large enough
array for string_ptr.

.cu
str_type
may be
.B VERBATIM, CAPITALIZED,
or
.B UPPER_CASE.
VERBATIM strings are accepted exactly as entered.  CAPITALIZED strings
will be automatically capitalized as they are entered, so that the
user need not use the shift key while typing.  (i.e. any lower case
letter typed following a space will be converted to upper case.)
UPPER_CASE strings
will have ALL lower case letters converted to upper case as they
are typed.

.cu
prompt
is the input prompt which will be displayed alongside the input data.

.cu
help
is a message which is displayed in the input window when
this field is visited.  The exact location of the help message
is specified when calling
.B screen_input().

.cu
string_ptr
is the address where the selected string will be copied by screen_input().
The incoming string at string_ptr will be used as the default string.
If the first character typed is printable, the default string will be
erased, and replaced by the newly typed text.  If the first character
typed is a cursor-motion key, then the string may be edited as described
under
.B screen_input().

.SH PITFALLS

.B field
must be the address of a valid array element.
The last element in

.SH EXAMPLE
.nf
#include <windows.h>

#define NAME_LEN    40
#define GENDER_LEN  6

int     get_data(win_t *win,char name[],char gender[],int *age);

int     main()

{
    char    name[NAME_LEN+1] = "",gender[GENDER_LEN+1] = "";
    int     age = 0;
    term_t  *term;
    win_t   *win;
    
    /* Initialize terminal */
    term = init_term(stdin,stdout,stderr,NULL);
    
    /* Create input window */
    win = new_win(term,10,60,10,10);
    wborder(win);
    
    /* Input data */
    get_data(win,name,gender,&age);
    
    /* Free window */
    del_win(&win);
    return 0;
}


int     get_data(win_t *win,char name[],char gender[],int *age)

{
    field_t fields[3];
    char    *genders[3] = {"Male","Female",NULL};
    
    /* Initialize an enumerated field */
    init_string(fields+0,2,2,NAME_LEN,CAPITALIZED,"Full name: ",
        " Enter first name, last name, and middle initial. ",name);
    init_enum(fields+1,3,2,GENDER_LEN,genders,"Gender: ",
        " Press <space> to toggle ",gender);
    init_int(fields+2,4,2,0,130,"Age: ",
        " Enter your age in years ",age);
    
    /* Input the data */
    screen_input(win,fields,3,WLINES(win)-3);
    return 0;
}

libtwin.a, windows.h, terminal.h, image.h
.SH SEE\ ALSO

twin, termcap, terminfo, cc, ld, curses, ioctl, sgtty, termio, termios
.SH AUTHOR

Jason W. Bacon

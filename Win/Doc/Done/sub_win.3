.TH TWIN 3
.SH NAME
.PP
TWIN - Terminal Windows Library
.SH SYNOPSIS
.PP
.nf
#include <windows.h>

win_t   *sub_win(parent_win,wlines,wcols,parent_line,parent_col)
win_t   *parent_win;
unsigned    wlines,wcols,parent_line,parent_col;

.fi
.SH DESCRIPTION
.B sub_win()
creates a new sub-window under the window
.B parent_win.
A sub-window behaves exactly like an ordinary window,
except that it's image is part of the parent-window's image.
Hence, any changes made to either the sub-window or parent will
affect the other as well.  For example, clearing the parent window
will also clear all of it's subwindows.

Sub-windows are useful for separating a portion of a window for
it's own processing, while allowing it to also be processed as
part of the whole.

.cu
PARAMETERS:

.cu
parent_win
is the window with which the new sub-window will share it's image.

.cu
wlines
and 
.cu
wcols
give the size of the new sub-window.

.cu
parent_line
and
.cu
parent_col
give the location within the parent window of the upper left corner
ot the new sub-window.

.SH RETURN\ VALUE

.B sub_win()
returns the address of a new window structure if successful, or
NULL if the window cannot be created.

.SH PITFALLS
.B parent_win
must be initialized using new_win() or sub_win() before it can be
used as a parent window.

.SH EXAMPLE
.nf
    #include <windows.h>

    int     main()

    {
        term_t  *term;
        win_t   *win, *subwin;
    
        /* Initialize terminal */
        term = init_term(stdin,stdout,stderr,NULL);
    
        /* Create a new window */
        win = new_win(term,10,60,8,10);
        subwin = sub_win(win,6,56,2,2);
        
        /* Clear window */
        wclear_win(win);
        
        /* Draw border around window */
        WSET_MODE(win,BOLD_MODE);
        wborder(win);
        
        /* Print a blinking message in the window */
        WSET_MODE(win,BLINK_MODE);
        wprint_center(win,4,"Hello, world!");
        
        /* Wait for user to press a key */
        WSET_MODE(win,NORMAL_MODE);
        wprint_center(win,5,"Press return to continue...");
        wgetc(win);

        /* Border for subwin */
        WSET_MODE(subwin,BOLD_MODE);
        wborder(subwin);
        
        /* Print a blinking message in the window */
        WSET_MODE(subwin,BLINK_MODE);
        wprint_center(subwin,4,"Hello, sub-world!");
        
        /* Wait for user to press a key */
        WSET_MODE(subwin,NORMAL_MODE);
        wprint_center(subwin,5,"Press return to continue...");
        wgetc(subwin);
        
        /* Clear parent window */
        wclear_win(win);
        wgetc(win);
        
        /* Delete window and terminal and quit */
        del_win(&subwin);
        del_win(&win);
        del_term(&term);
        return 0;
    }
.SH FILES

libtwin.a, windows.h, terminal.h, image.h
.SH SEE\ ALSO

twin, termcap, terminfo, cc, ld, curses, ioctl(), sgtty(), termio, termios,
new_win()

.SH AUTHOR

Jason W. Bacon

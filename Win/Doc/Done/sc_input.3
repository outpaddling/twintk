.TH TWIN 3
.SH NAME
.PP
TWIN - Terminal Windows Library
.SH SYNOPSIS
.PP
.nf
#include <windows.h>

void    screen_input(win, fields, nfields, help_line)
win_t   *win;
field_t fields[];
unsigned nfields,help_line;

.fi
.SH DESCRIPTION

The
.B screen_input()
function displays an interactive input panel for easy data input
of multiple input items.  Common input uses include database records,
configuration information, etc.

.cu
PARAMETERS:

.cu
win
is the window in which the input panel is executed.

.cu
fields
is an array of
.B field_t
structures, which describes the input panel in full.
( Explained below )

.cu
nfields
is the number of input fields in the array
.B fields.  This argument is a common source of errors - see pitfalls below.

.cu
help_line
is the line on which help messages for each field will be displayed.

To use
.B screen_input(),
you must first initialize each member of the array
.B fields
using one of the functions
.B init_string(), init_int(), init_enum(), ...

screen_input() first calls the function
.B print_current()
to display the prompts and default values stored in each member of
fields.

The user may then edit individual fields, and move between fields
until the input panel appears complete.  Input editing is performed
by the functions
.B wget_string(), wget_int(), wget_enum(), ...
Each of these functions has editing features described in
their respective manuals.

To move to the next field, the user may type
.cu
<return>
or
.cu
<down-arrow>.

To move to the previous field, the user may type
.cu
<ctrl+p>
or
.cu
<up-arrow>.

The user must type
.cu
<ctrl+d>
to submit the input and exit the input panel.

.SH PITFALLS

Make sure the
.B nfields
value is accurate, and the
.B fields
array is large enough.  When adding new fields to the input panel,
it's easy to forget to update either the array size or
the function argument for nfields, causing strange behavior or
segmentation faults.

.SH EXAMPLE
.nf
#include <windows.h>

#define NAME_LEN    40
#define GENDER_LEN  6

int     get_data(win_t *win,char name[],char gender[],int *age);

int     main()

{
    char    name[NAME_LEN+1] = "",gender[GENDER_LEN+1] = "";
    int     age = 0;
    term_t  *term;
    win_t   *win;
    
    /* Initialize terminal */
    term = init_term(stdin,stdout,stderr,NULL);
    
    /* Create input window */
    win = new_win(term,10,60,10,10);
    wborder(win);
    
    /* Input data */
    get_data(win,name,gender,&age);
    
    /* Free window */
    del_win(&win);
    return 0;
}


int     get_data(win_t *win,char name[],char gender[],int *age)

{
    field_t fields[3];
    char    *genders[3] = {"Male","Female",NULL};
    
    /* Initialize fields */
    init_string(fields+0,2,2,NAME_LEN,CAPITALIZED,"Full name: ",
        " Enter first name, last name, and middle initial. ",name);
    init_enum(fields+1,3,2,GENDER_LEN,genders,"Gender: ",
        " Press <space> to toggle ",gender);
    init_int(fields+2,4,2,0,130,"Age: ",
        " Enter your age in years ",age);
    
    /* Input the data */
    screen_input(win,fields,3,WLINES(win)-3);
    return 0;
}

.SH FILES

libtwin.a, windows.h, terminal.h, image.h
.SH SEE\ ALSO

twin, termcap, terminfo, cc, ld, curses, ioctl, sgtty, termio, termios
.SH AUTHOR

Jason W. Bacon
